// Button.scss
$button-colors: (
  primary: (
    background: linear-gradient(45deg, #4a90e2, #357abd),
    hover: linear-gradient(45deg, #357abd, #2661a4),
    text: #ffffff,
    border: transparent
  ),
  secondary: (
    background: #ffffff,
    hover: #f8f9fa,
    text: #2c3e50,
    border: #e1e8ed
  ),
  success: (
    background: linear-gradient(45deg, #2ecc71, #27ae60),
    hover: linear-gradient(45deg, #27ae60, #219a52),
    text: #ffffff,
    border: transparent
  ),
  danger: (
    background: linear-gradient(45deg, #e74c3c, #c0392b),
    hover: linear-gradient(45deg, #c0392b, #a93226),
    text: #ffffff,
    border: transparent
  )
);

$button-sizes: (
  small: (
    padding: 0.5rem 1rem,
    font-size: 0.875rem
  ),
  medium: (
    padding: 0.75rem 1.5rem,
    font-size: 1rem
  ),
  large: (
    padding: 1rem 2rem,
    font-size: 1.125rem
  )
);

.custom-button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 2rem;
  font-weight: 600;
  transition: all 0.3s ease;
  cursor: pointer;
  outline: none;
  border: 1px solid transparent;
  gap: 0.5rem;
  white-space: nowrap;
  
  &__text {
    position: relative;
    z-index: 1;
  }

  &__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 1;

    svg {
      width: 1.25em;
      height: 1.25em;
    }

    &--left {
      margin-right: 0.25rem;
    }

    &--right {
      margin-left: 0.25rem;
    }
  }

  &__spinner {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 1.25em;
    height: 1.25em;

    svg {
      animation: spin 1s linear infinite;
      width: 100%;
      height: 100%;
    }
  }

  // Generate styles for each variant
  @each $variant, $colors in $button-colors {
    &--#{$variant} {
      background: map-get($colors, background);
      color: map-get($colors, text);
      border-color: map-get($colors, border);

      &:hover:not(.custom-button--disabled):not(.custom-button--loading) {
        background: map-get($colors, hover);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      }

      &:active:not(.custom-button--disabled):not(.custom-button--loading) {
        transform: translateY(0);
      }
    }
  }

  // Generate styles for each size
  @each $size, $values in $button-sizes {
    &--#{$size} {
      padding: map-get($values, padding);
      font-size: map-get($values, font-size);
    }
  }

  &--full-width {
    width: 100%;
  }

  &--disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }

  &--loading {
    cursor: wait;
    color: transparent !important;

    .custom-button__icon,
    .custom-button__text {
      opacity: 0;
    }
  }

  // Focus styles
  &:focus {
    box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.3);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Optional: Add ripple effect
.custom-button {
  &::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border-radius: inherit;
    background-color: currentColor;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  &:active::after {
    opacity: 0.1;
  }
}